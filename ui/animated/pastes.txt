import React, { FC, useEffect } from 'react'

import Svg, { Path } from 'react-native-svg'

import { Dimensions } from 'react-native'

import Animated from 'react-native-reanimated'

useAnimatedProps,
    
useSharedValue,
    
withRepeat,

withTiming,

Easing

from 'react-native-reanimated'


const { width } = Dimensions.get('window')

const AnimatedPath = Animated.createAnimatedComponent(Path)

type SineWaveProps = {}

export const SineWave: FC<SineWaveProps> = ({}) => {

    return (

        <Svg height="100%" width="100%" viewBox={`0 0 ${width} 100`}>

</Svg>

<AnimatedPath

fill="none"

strokeWidth={2}

stroke="#000"

animatedProps={animatedProps}

const animatedProps = useAnimatedProps(
    --- do () => {})

    --- do return {}

d: calcSineWave()

const calcSineWave = (
    
    amplitude: number, 
    
    frequency: number, 
    
    phase: number

let path = `M 0 ${amplitude * Math.sin(phase)}`

for (let x = 0; x <= width; x++) {

    const y =
            
            amplitude * Math.sin(2 * Math.PI * (x / width) * frequency + phase) +
            amplitude

    path += `L ${x} ${y}`

    return path

'worklet'

70, 5, 0

30, 5, 0

30, 2, 0

30, 2, 45

30, 2, 90

const phase = useSharedValue(0)

useEffect(() => {

    phase.value = 
    withRepeat(
        withTiming(
            2 * Math.PI,
            { 
                duration: 1000, 
                easing: Easing.linear 
            }),
        -1,
        false
